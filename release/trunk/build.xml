<?xml version="1.0" encoding="UTF-8"?>
<!--
Setup:
	For Uploading to s3 you need s3cmd as commandline tool

	For SVN you need svnant.jar in your java-library
	Project: http://subclipse.tigris.org/svnant.html
	Download: http://subclipse.tigris.org/files/documents/906/32898/svnant-1.0.0.zip
	Version: 1.0.0

	In Linux
	- Copy the File lib/svnant.jar to /usr/share/java/

	In Windows
	- ...

-->


<project name="ShopgateLibrary" basedir=".">

	<description>ShopgateLibrary</description>

	<!-- Handle the Build-Number -->
	<buildnumber file="build.num" />

	<property file="build.properties"/>
	<property name="project-root" location="./" />
	<property name="ant-folder" location="./ant/" />

	<property name="build-folder" location="${ant-folder}/build/" />
	<property name="output-folder" location="${build-folder}/shopgate_library" />
	<property name="release-folder" location="${ant-folder}/releases" />

	<!-- SVN -->
	<!-- Use the SVN credentials from the project -->
	<path id="path.svnant">
		<pathelement location="svnant.jar" />
		<pathelement location="svnClientAdapter.jar" />
	</path>
	<typedef resource="svntask.properties" classpathref="path.svnant" />

	<echo>
		########################################################
		## BUILD Library
		########################################################
	</echo>

	<!--
		Prepare the Project

		Increase the Version-Number and commit the Version-Change
	-->
	<target name="prepare">
		<echo message="Set version in classes/core.php to ${plugin.version}" />
		<replaceregexp file="${project-root}/classes/core.php"
			match="define\('SHOPGATE_LIBRARY_VERSION', '.+'\);"
			replace="define('SHOPGATE_LIBRARY_VERSION', '${plugin.version}');"/>

		<echo message="Commit version change in core.php" />
		<svn>
			<commit message="Increase Version to ${plugin.version}">
				<fileset dir="${project-root}">
					<include name="classes/core.php" />
					<include name="build.num" />
				</fileset>
			</commit>
		</svn>
	</target>

	<!-- Create the SVN-Tag for the current Version -->
	<target name="create_tag">
		<echo message="Create SVN-Tag for Version ${plugin.version}" />
		<svn>
			<mkdir
				url="${svn.url}/tags/{plugin.version}"
				message="Create Path for Version ${plugin.version}" />

			<mkdir
				url="${svn.url}/tags/{plugin.version}/release"
				message="Create Path for Version ${plugin.version}" />

			<copy
				srcUrl="${svn.url}/trunk"
				destUrl="${svn.url}/tags/{plugin.version}/release"
				message="Shopgate Library Version: ${plugin.version}" />
		</svn>
	</target>

	<!--
		Build the ZIP-File
	-->
	<target name="build">
		<echo message="Build ZIP-Archive" />

		<delete dir="${ant-folder}" />
		<mkdir dir="${release-folder}" />
		<mkdir dir="${output-folder}" />

		<copy todir="${output-folder}">
			<fileset dir="${project-root}" followsymlinks="false">
				<include name="assets/" />
				<include name="classes/" />
				<include name="temp/" />
				<include name="vendors/" />
				<include name=".htaccess" />
				<include name="shopgate.php" />
				<include name="config/config.php" />
				<exclude name="temp/*.*"/>
			</fileset>
		</copy>

		<zip zipfile="${project-root}/shopgate_library.zip" basedir="${build-folder}" update="false" />
		<delete dir="${ant-folder}" />
	</target>

	<!--
		Upload the the new Version to S3

		Depends on Prepare, create_tag, build
	-->
	<target name="upload" depends="prepare, create_tag, build">
		<!--<s3cmd command="put" file="${project-root}/shopgate_library.zip" key="s3://shopgate-static/plugins/shopgate_library.zip">
			<args>
				<arg value="- -acl-public" />
			</args>
		</s3cmd>-->

		<echo message="Public-URL: http://static.shopgate.com/plugins/shopgate_library.zip" />
	</target>

	<!--
		Need s3cmd-Commanline-Tool

		Install unter Ubuntu: apt-get install s3cmd

		run: s3cmd -configure
	-->

	<!-- BEGIN MACROS -->
	<macrodef name = "s3cmd">
	    <attribute name = "command" />
	    <attribute name = "file" default = "" />
	    <attribute name = "key" default = "" />
	    <element name = "args" optional = "true" />

	    <sequential>
	        <echo message = "Upload @{file} to @{key}" />
	        <exec executable = "s3cmd">
	            <arg value = "@{command}" />
	            <args />
	            <arg value = "@{file}" />
	            <arg value = "@{key}" />
	        </exec>
	    </sequential>
	</macrodef>
	<!-- END MACROS -->
</project>